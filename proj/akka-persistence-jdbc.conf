// https://github.com/dnvriend/akka-persistence-jdbc.git#a3a4cbbb5be3073a6d4f16e39085e90a3dfa0fcc

// frozen (December 2019) at a December 2019 commit a bit before the
// organization changed to com.typesafe.akka. once the lagom repo
// updates their dependency to use the new org, we could probably
// unfreeze

vars.proj.akka-persistence-jdbc: ${vars.base} {
  name: "akka-persistence-jdbc"
  uri: "https://github.com/dnvriend/akka-persistence-jdbc.git#a3a4cbbb5be3073a6d4f16e39085e90a3dfa0fcc"

  // it isn't clear to me that there are any tests we can run without
  // doing the Docker stuff in their test.sh script.  we might ask the
  // Akka team if there is any segregation between unit vs. integration tests,
  // that kind of thing?
  extra.test-tasks: "compile"
  // ScalaTest 3.0, not 3.1
  deps.inject: ${vars.base.deps.inject} ["scalacommunitybuild#scalatest"]
  extra.commands: ${vars.default-commands} [
    // ScalaTest 3.0, not 3.1
    "removeDependency org.scalatest scalatest"
    """set libraryDependencies in ThisBuild += "scalacommunitybuild" %% "scalatest" % "0" % Test"""
    // usual bintray stuff
    "set every bintrayReleaseOnPublish := false"
  ]
  extra.options: ["-Dbintray.user=dummy", "-Dbintray.pass=dummy"]
}
