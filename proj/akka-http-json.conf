// https://github.com/hseeberger/akka-http-json.git#bff4290dd0247775483ecb0ace730d6a07c2b318  # was master

// 2.11: has integrations for a number of JSON librries, so finding a set of SHAs
// that works can be a bit tricky. freezing this and jsoniter-scala together (October 2019)

// dependency of Scaladex (specifically, akka-http-json4s)
// frozen at an arbitrary known-green commit (from August 2019)
vars.proj.akka-http-json: ${vars.base} {
  name: "akka-http-json"
  uri: "https://github.com/hseeberger/akka-http-json.git#bff4290dd0247775483ecb0ace730d6a07c2b318"

  extra.exclude: [
    // we're in jawn 0.10 space because scaladex is, but circe is over in jawn 0.11 space.
    // (if it becomes important, we could have entries in both spaces.)
    "akka-http-circe"
    // library com.sksamuel.avro4s#avro4s-json is not provided
    "akka-http-avro4s"
    // library com.avsystem.commons#commons-core is not provided
    "akka-http-avsystem-gencodec"
    // out of scope
    "akka-http-argonaut"
  ]
  // apparently some dependency dropped its scala-reflect dependency?
  // and we have the newer version of that dependency here in the
  // community build, while the akka-http-jackson subproject's
  // declared dependency is on the old version?
  // that's my best guess of why we need this here, anyway
  deps.inject: ${vars.base.deps.inject} [
    "org.scala-lang#scala-reflect"
  ]
  extra.commands: ${vars.default-commands} [
    "set libraryDependencies in `akka-http-jackson` += \"org.scala-lang\" %% \"scala-reflect\" % \""${vars.scala-version}"\""
  ]
  // there were test failures that appeared to me to be due to a version mismatch with
  // akka-http.  we could try re-enabling the tests the next time we unfreeze, if we
  // ever do -- the cost/benefit of including this repo is not that high, the integrations
  // with all the different libraries are too fragile
  extra.test-tasks: ["compile"]
}
